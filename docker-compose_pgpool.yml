version: "3.9"

services:
  nginx:
    container_name: "NGINX"
    image: nginx
    ports:
      - "5000:5000"
    volumes:
      - ./nginx:/etc/nginx/
    depends_on:
      - api_1
      - api_2
    networks:
      - apinewtork
      - fetch_network
    restart: always

  api_1:
    container_name: "STOCK-API_1"
    build: .
    environment:
      - NODE=NODE1
      - PORT=8081
      - FETCH_PORT=3001
      - MICROSERVICE_URL=http://microservico_1
    env_file:
      - ".env"
    depends_on:
      - auth
      - microservico_1
    networks:
      - apinewtork
    restart: always

  api_2:
    container_name: "STOCK-API_2"
    build: .
    environment:
      - NODE=NODE2
      - PORT=8082
      - FETCH_PORT=3002
      - MICROSERVICE_URL=http://microservico_2
    depends_on:
      - auth
      - microservico_2
    env_file:
      - ".env"
    networks:
      - apinewtork
    restart: always

  microservico_1:
    container_name: "MICROSERVICE_1"
    build: ./microservicos/stockMicroServico/
    env_file:
      - ./microservicos/stockMicroServico/.env
    environment:
      - PORT=3001
      - NODE=MICROSERVICO1
    networks:
      - apinewtork
      - fetch_network
    depends_on:
      - pgpool
    restart: always

  microservico_2:
    container_name: "MICROSERVICE_2"
    build: ./microservicos/stockMicroServico/
    env_file:
      - ./microservicos/stockMicroServico/.env
    environment:
      - PORT=3002
      - NODE=MICROSERVICO2
    networks:
      - apinewtork
      - fetch_network
    depends_on:
      - pgpool
    restart: always

  auth:
    container_name: "GRPC-AUTH"
    build: ./microservicos/authServer/
    environment:
      - HOST=pgpool
      - PORT=9999
    env_file:
      - ./microservicos/authServer/.env
    networks:
      - apinewtork
    depends_on:
      - pgpool
    restart: always

  pgpool:
    restart: 'always'
    image: melvinkcx/rds_pgpool:0.2.8
    ports:
      - "9999:9999"
      - "9000:9000"
      - "9694:9694"
    environment:
      - DB_NAME=hypermediastockapi
      - DB_USERNAME=postgres
      - DB_PASSWORD=pass
      - MASTER_NODE_HOSTNAME=database_1
      - REPLICA_NODE_HOSTNAME_0=database_2
      - CLUSTER_MODE=streaming_replication
      - NUM_INIT_CHILDREN=2
      - MAX_POOL=2
      - ELASTIC_IP=55.55.55.55
      - SELF_INSTANCE_ID=i-abababab
      - SELF_PRIVATE_IP=172.33.11.11
      - STANDBY_INSTANCE_PRIVATE_IP=172.33.33.33
    depends_on:
      - database_1
      - database_2
    networks:
      - apinewtork
      - fetch_network

  database_1:
    container_name: "POSTGRES_DATABASE_1"
    build: ./microservicos/authServer/database/
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - ./microservicos/authServer/database/.env
    networks:
      - apinewtork
    volumes:
      - postgres:/var/lib/postgresql/data

  database_2:
    container_name: "POSTGRES_DATABASE_2"
    build: ./microservicos/authServer/database/
    ports:
      - "5444:5432"
    restart: always
    env_file:
      - ./microservicos/authServer/database/.env
    networks:
      - apinewtork
    volumes:
      - postgres:/var/lib/postgresql/data


volumes:
  postgres:
    external: false

networks:
  apinewtork:
  fetch_network:
    driver: bridge


